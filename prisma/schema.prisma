generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Tabla principal de usuarios (con contraseña, token y fecha de token)
model usuarios {
  id               Int              @id @default(autoincrement())
  nombre           String?          @db.VarChar(100)
  celular          String?          @db.VarChar(15)
  ciudad           String?          @db.VarChar(100)
  email            String           @unique @db.VarChar(100)
  password         String?          @db.VarChar(255) 
  token            String?          @db.VarChar(255)
  tokenFecha       DateTime?
  esAdministrador  Boolean          @default(false)
  esRecolector     Boolean          @default(false)
  envios           HistorialEnvio[] // Relación uno a muchos con HistorialEnvio
}

// Tabla de historial de envíos
model HistorialEnvio {
  id              Int      @id @default(autoincrement())
  NumeroGuia      String   @unique
  PaymentId       String?
  Origen          String
  Destino         String
  Destinatario    String
  Remitente       String
  Estado          String
  FechaSolicitud  DateTime @default(now())
  usuarioId       Int?
  
  
  // Relaciones si las tienes
  usuario         usuarios? @relation(fields: [usuarioId], references: [id])
  
  @@map("historial_envio")
}

// Tabla de mensajes de contacto
model Contacto {
  id               Int       @id @default(autoincrement())
  nombre           String    @db.VarChar(100)
  tipo_documento   String?   @db.VarChar(10)
  numero_documento String?   @db.VarChar(20)
  celular          String?   @db.VarChar(15)
  ciudad           String?   @db.VarChar(100)
  email            String?   @db.VarChar(100)
  correo           String    @db.VarChar(100)
  mensaje          String    @db.Text
  creadoEn         DateTime  @default(now())
  leido            Boolean   @default(false)
  respondido       Boolean   @default(false)
  archivado        Boolean   @default(false)
  respuesta        String?   @db.Text
  fechaRespuesta   DateTime?
}